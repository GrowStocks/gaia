///
//  Copyright (c) 2021 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
///

@use '../scaffold';

@use 'sass:map';
@use 'sass:list';

@use 'button-base';
@use 'button-theme';
@use 'button-link';

@mixin render(
    $struct: (),
    $color: (),
    $shape: (),
    $typography: (),
    $settings: ()
) {
    $_merged-struct: map.merge(button-theme.$init-struct, $struct);
    $_merged-color: map.merge(button-theme.$init-color, $color);
    $_merged-shape: map.merge(button-theme.$init-shape, $shape);
    $_merged-typography: map.merge(button-theme.$init-typography, $typography);
    $_merged-settings: map.merge(button-theme.$init-settings, $settings);

    $types: map.get($_merged-settings, 'types');

    @include button-base.base($_merged-struct) {
        @include scaffold.shape-apply('button', $_merged-shape);
        @include scaffold.typography-apply('button', $_merged-typography);

        @if list.index($types, 'text') or list.index($types, 'all') {
            @include scaffold.color-apply('button', $_merged-color, 'text');
        }

        @if list.index($types, 'outlined') or list.index($types, 'all') {
            &.gs-button--outlined {
                @include scaffold.color-apply('button', $_merged-color, 'outlined');
            }
        }

        @if list.index($types, 'filled') or list.index($types, 'all') {
            &.gs-button--filled {
                @include scaffold.color-apply('button', $_merged-color, 'filled');
            }
        }
    }

    @include button-link.render($_merged-color);
}
