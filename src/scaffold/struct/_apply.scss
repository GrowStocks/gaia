///
//  Copyright (c) 2022 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
///

@use '../theme';
@use 'sass:map';

@use 'validators';

// Recommended to be used as a extender feature only.
@mixin apply($component-name, $struct-theme, $is-extender: false) {
  @if validators.is-struct-prop($struct-theme) {
    $width: map.get($struct-theme, 'width');
    $min-width: map.get($struct-theme, 'min-width');
    $max-width: map.get($struct-theme, 'max-width');
    $margin: map.get($struct-theme, 'margin');
    $padding: map.get($struct-theme, 'padding');

    @if $is-extender {
      @if $width {
        @include theme.key-bind('#{$component-name}-width', theme.token-switch($width));
      }
      @if $min-width {
        @include theme.key-bind('#{$component-name}-min-width', theme.token-switch($min-width));
      }
      @if $max-width {
        @include theme.key-bind('#{$component-name}-max-width', theme.token-switch($max-width));
      }
      @if $margin {
        @include theme.key-bind('#{$component-name}-margin', theme.token-switch($margin));
      }
      @if $padding {
        @include theme.key-bind('#{$component-name}-padding', theme.token-switch($padding));
      }
    } @else {
      @if $width {
        width: theme.key-create('#{$component-name}-width', theme.token-switch($width));
      }
      @if $min-width {
        min-width: theme.key-create('#{$component-name}-min-width', theme.token-switch($min-width));
      }
      @if $max-width {
        max-width: theme.key-create('#{$component-name}-max-width', theme.token-switch($max-width));
      }
      @if $margin {
        margin: theme.key-create('#{$component-name}-margin', theme.token-switch($margin));
      }
      @if $padding {
        padding: theme.key-create('#{$component-name}-padding', theme.token-switch($padding));
      }
    }
  }
}