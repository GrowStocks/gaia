//
//  Copyright (c) 2021 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use '../theme';
@use 'validators';

@use 'sass:map';
@use 'sass:list';
@use 'sass:string';

@mixin apply(
    $component-name,
    $color-theme: (),
    $style: 'filled'
) {
    @if validators.is-map-color-key($color-theme) {
        $default: map.get($color-theme, 'default');
        $hover: map.get($color-theme, 'hover');
        $active: map.get($color-theme, 'active');
        $focus: map.get($color-theme, 'focus');
        $disabled: map.get($color-theme, 'disabled');
        $ink: map.get($color-theme, 'ink');

        @if $style == 'text' {
            @include _text($component-name, $default, $hover, $active, $focus, $disabled, $ink);
        }

        @if $style == 'outlined' {
            @include _outlined($component-name, $default, $hover, $active, $focus, $disabled, $ink);
        }

        @if $style == 'filled' {
            @include _filled($component-name, $default, $hover, $active, $focus, $disabled, $ink);
        }
    }
}

@mixin _text($component-name, $default, $hover, $active, $focus, $disabled, $ink) {
    background: rgba(0 0 0 / 0);
    color: theme.key-create('#{$component-name}-ink', theme.token-get($default));
    border: 1px solid rgba(0 0 0 / 0);

    @if $hover {
        &:hover {
            background: rgba(#b4b4b4, 13%);
            color: theme.key-create('#{$component-name}-hover-ink', theme.token-get($hover));
            border-color: rgba(#b4b4b4, 1.3%);
        }
    }

    @if $focus {
        &:focus {
            background: rgba(#b4b4b4, 13%);
            color: theme.key-create('#{$component-name}-focus-ink', theme.token-get($focus));
            border-color: rgba(#b4b4b4, 1.3%);
        }
    }

    @if $active {
        &:active {
            background: rgba(#b4b4b4, 20%);
            color: theme.key-create('#{$component-name}-active-ink', theme.token-get($active));
            border-color: rgba(#b4b4b4, 2%);
        }
    }

    @if $disabled {
        &:disabled {
            color: theme.key-create('#{$component-name}-disabled-ink', theme.token-get($disabled));

            &:hover {
                background: rgba(0 0 0 / 0);
                border-color: rgba(0 0 0 / 0);
            }
        }
    }
}

@mixin _outlined($component-name, $default, $hover, $active, $focus, $disabled, $ink) {
    background: rgba(0 0 0 / 0);
    color: theme.key-create('#{$component-name}-ink', theme.token-get($default));
    border: 1px solid theme.key-create('#{$component-name}-border', theme.token-get($default));

    @if $focus {
        &:focus {
            background: rgba(#b4b4b4, 13%);
            color: theme.key-create('#{$component-name}-focus-ink', theme.token-get($hover));
            border-color: theme.key-create('#{$component-name}-focus-border', theme.token-get($focus));
        }
    }

    @if $hover {
        &:hover {
            background: theme.key-create('#{$component-name}-hover-fill', theme.token-get($hover));
            color: theme.key-create('#{$component-name}-hover-ink', theme.token-get($ink));
            border-color: theme.key-create('#{$component-name}-hover-border', theme.token-get($hover));
        }
    }

    @if $active {
        &:active {
            background: theme.key-create('#{$component-name}-active-fill', theme.token-get($active));
            color: theme.key-create('#{$component-name}-active-ink', theme.token-get($ink));
            border-color: theme.key-create('#{$component-name}-active-border', theme.token-get($active));
        }
    }

    @if $disabled {
        &:disabled {
            color: theme.key-create('#{$component-name}-disabled-ink', theme.token-get($disabled));
            border-color: theme.key-create('#{$component-name}-disabled-border', theme.token-get($disabled));

            &:hover {
                background: rgba(0 0 0 / 0);
            }
        }
    }
}

@mixin _filled($component-name, $default, $hover, $active, $focus, $disabled, $ink) {
    background: theme.key-create('#{$component-name}-fill', theme.token-get($default));
    color: theme.key-create('#{$component-name}-ink', theme.token-get($ink));
    border: 1px solid theme.key-create('#{$component-name}-border', theme.token-get($default));

    @if $hover {
        &:hover {
            background: theme.key-create('#{$component-name}-hover-fill', theme.token-get($hover));
            color: theme.key-create('#{$component-name}-hover-ink', theme.token-get($ink));
            border-color: theme.key-create('#{$component-name}-hover-border', theme.token-get($hover));
        }
    }

    @if $focus {
        &:focus {
            background: theme.key-create('#{$component-name}-focus-fill', theme.token-get($focus));
            color: theme.key-create('#{$component-name}-focus-ink', theme.token-get($ink));
            border-color: theme.key-create('#{$component-name}-focus-border', theme.token-get($focus));
        }
    }

    @if $active {
        &:active {
            background: theme.key-create('#{$component-name}-active-fill', theme.token-get($active));
            color: theme.key-create('#{$component-name}-active-ink', theme.token-get($ink));
            border-color: theme.key-create('#{$component-name}-active-border', theme.token-get($active));
        }
    }

    @if $disabled {
        &:disabled {
            background: theme.key-create('#{$component-name}-disabled-fill', theme.token-get($disabled));
            color: theme.key-create('#{$component-name}-disabled-ink', theme.token-get($ink));
            border-color: theme.key-create('#{$component-name}-disabled-border', theme.token-get($disabled));
        }
    }
}


