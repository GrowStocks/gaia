///
//  Copyright (c) 2022 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
///

@use '../theme';
@use 'sass:list';

$_valid-colors: (
  transparent,
  inherit,
  rgba(0, 0, 0, 0),
  rgba(0 0 0 / 0)
);

$_valid-color-props: (
  'default',
  'hover',
  'active',
  'focus',
  'disabled',
  'ink'
);

@function is-prop($prop) {
  @if not list.index($_valid-color-props, $prop) {
    @error 'Invalid color prop: #{$prop}. Must be one of the following valid props: #{$_valid-color-props}.';
  }
  @return true;
}

@function is-color($color) {
  @if not theme.token-check($color) or not list.index($_valid-colors, $color) {
    @error 'Invalid color: #{$color}. Must be a valid color token or any of the following: #{$_valid-colors}';
  }
  @return true;
}

@function is-color-prop($map) {
  @each $prop, $value in $map {
    @return is-prop($prop);
  }
}