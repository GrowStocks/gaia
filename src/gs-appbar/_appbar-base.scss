///
//  Copyright (c) 2022 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
///

@use '../scaffold';
@use 'sass:map';

@use 'appbar-item';

@mixin base($struct, $breakpoint: 'medium', $items: 4, $has-elevation: false) {
    $width: map.get($struct, 'width');
    $height: map.get($struct, 'height');
    $padding: map.get($struct, 'padding');
    $gap: map.get($struct, 'gap');

    $_container-width: (42px * $items) + (8px * $items);

    .gs-appbar {
        width: scaffold.key-create('appbar-width', scaffold.token-switch($width));
        height: scaffold.key-create('appbar-height', scaffold.token-switch($height));
        position: fixed;
        inset: auto 0 0 0;
        z-index: 100;
        padding: scaffold.key-create('appbar-padding', scaffold.token-switch($padding));

        @content;

        @include scaffold.breakpoint-create($breakpoint) {
            @include scaffold.key-bind('appbar-width', $_container-width);
            position: relative;
            padding: 0;
            background-color: rgba(0 0 0 / 0) !important;
            border-color: rgba(0 0 0 / 0) !important;
        }

        .gs-appbar__wrapper {
            width: 100%;
            display: grid;
            grid-template-columns: repeat($items, 1fr);
            grid-gap: scaffold.key-create('appbar-gap', scaffold.token-switch($gap));

            @include appbar-item.render($breakpoint, $has-elevation);
        }
    }
}