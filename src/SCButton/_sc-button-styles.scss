//
//  Copyright (c) 2021 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use '../SCCore/Structure';
@use '../SCCore/Color';
@use '../SCCore/Shape';
@use '../SCCore/Typography';
@use '../SCCore/Feature';
@use '../SCTooltip';

@use 'sass:map';
@use 'sc-button-base' as base;
@use 'sc-button-theme' as theme;

@use 'sc-button-text' as *;
@use 'sc-button-outlined' as *;
@use 'sc-button-filled' as *;

@mixin render(
    $color-theme: (),
    $shape-theme: (),
    $typography-theme: (),
    $settings: ()
) {
    
    $_merged-settings: map.merge(theme.$init-settings, $settings);
    $_type: map.get($_merged-settings, type);
    
    $_color-theme: map.merge(theme.$init-color-theme, $color-theme);
    $_shape-theme: map.merge(theme.$init-shape-theme, $shape-theme);
    $_typography-theme: map.merge(theme.$init-typography-theme, $typography-theme);
    
    @include base.base() {
        
        @content;
        
        @if Feature.has-item($_type, default) or Feature.has-item($_type, text) or Feature.has-item($_type, all) {
            
            @include sc-button-text_($_color-theme);
            
        }
        
        @if Feature.has-item($_type, outlined) or Feature.has-item($_type, all) {
            
            @include sc-button-outlined_($_color-theme);
            
        }
        
        @if Feature.has-item($_type, filled-unelevated) or Feature.has-item($_type, all) {
            
            @include sc-button-filled_($_color-theme);
            
        }
        
        @if Feature.has-item($_type, filled) or Feature.has-item($_type, all) {
            
            @include sc-button-filled_($_color-theme, true);
            
        }
        
        @include Shape.apply('button', $_shape-theme);
        @include Typography.apply('button', $_typography-theme);
        
        @if Feature.has-property($_merged-settings, 'has-tooltip') == true {
            
            @include SCTooltip.render();
            
        }
    }
    
}
