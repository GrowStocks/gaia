//
//  MIT License
//
//  Copyright (c) 2021 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use 'sass:map';
@use 'sass:math';

// SET MEDIA QUERY SIZING
$mobile-min: 320px !default;
$medium-min: 540px !default;
$full-min: 850px !default;

$mobile-max: 319px !default;
$medium-max: 539px !default;
$full-max: 849px !default;

// VENDOR PREFIX
@mixin prefix($property, $value) {

    $prefixes-map: (
        'webkit',
        'ms',
        'moz',
        'o'
    );

    @each $prefix in $prefixes-map {
        #{'-' + $prefix + '-' + $property}: $value;
    }

    #{$property}: $value;
}

// SCROLLBAR @Depricated
@mixin scrollbar($background) {

    &::-webkit-scrollbar-track {
        background: $background;
    }

    &::-webkit-scrollbar-thumb {
        background-color: var(--scroll-thumb);
        border: 4px solid $background;

        &:hover {
            background-color: var(--scroll-hover);
        }
    }
}

// RAINBOW MIXIN
@mixin rainbow-factory() {

    $palette: (
        //$color: $base
        'dark-red': #7f0000,
        'red': #b00020,
        'orange': #e65100,
        'light-orange': #ff8f00,
        'yellow': #fbc02d,
        'lime-green': #7cb342,
        'green': #25a53f,
        'dark-green': #005005,
        'light-blue': #039be5,
        'blue': #01579b,
        'dark-blue': #002f6c,
        'pink': #f48fb1,
        'magenta': #d500f9,
        'purple': #4a148c
    );

    $text-palette: (
        //$color: $text
        'dark-red': #fff,
        'red': #fff,
        'orange': #fff,
        'light-orange': #000,
        'yellow': #000,
        'lime-green': #000,
        'green': #fff,
        'dark-green': #fff,
        'light-blue': #000,
        'blue': #fff,
        'dark-blue': #fff,
        'pink': #000,
        'magenta': #fff,
        'purple': #fff
    );

    @each $color, $base in $palette {
        &.#{$color} {
            background-color: $base!important;
            color: map.get($text-palette, $color)!important;
        }
    }
}

@mixin shape($imported-shape: (), $imported-padding: (), $imported-border-radius: (), $imported-clip-size: ()) {

    @if $imported-shape == pill {
        border-radius: 500px;
        @if $imported-padding {
            padding: $imported-padding;
        }
    } @else if $imported-shape == round {
        @if $imported-border-radius {
            border-radius: $imported-border-radius;
        }
        @if $imported-padding {
            padding: $imported-padding;
        }
    } @else if $imported-shape == block {
        border-radius: 0;
        @if $imported-padding {
            padding: $imported-padding;
        }
    } @else if $imported-shape == clipped and $imported-clip-size {
        @if $imported-clip-size {
            clip-path:
                polygon(
                    0% $imported-clip-size,
                    $imported-clip-size 0%, calc(100% - #{$imported-clip-size}) 0%,
                    100% $imported-clip-size,
                    100% calc(100% - #{$imported-clip-size}),
                    calc(100% - #{$imported-clip-size}) 100%,
                    $imported-clip-size 100%,
                    0% calc(100% - #{$imported-clip-size})
                )
            ;
        }
        @if $imported-padding {
            padding: $imported-padding;
        }
    } @else if $imported-shape == default {
        @if $imported-border-radius {
            border-radius: $imported-border-radius;
        }
        @if $imported-padding {
            padding: $imported-padding;
        }
    }
}


// MIN MEDIA
@mixin mobile-min() {
    @media(min-width: $mobile-min) {
        @content
    }
}

@mixin medium-min() {
    @media(min-width: $medium-min) {
        @content
    }
}

// MAX MEDIA
@mixin full-min() {
    @media(min-width: $full-min) {
        @content
    }
}

@mixin mobile-max() {
    @media(max-width: $mobile-max) {
        @content
    }
}

@mixin medium-max() {
    @media(max-width: $medium-max) {
        @content
    }
}

@mixin full-max() {
    @media(max-width: $full-max) {
        @content
    }
}
