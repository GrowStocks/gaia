//
//  Copyright (c) 2021 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use 'sass:math';
@use 'sass:map';
@use 'sass:list';
@use 'sass:meta';

@use '../Feature';

@use 'typography-validators' as validator;
@use 'typography-defaults' as defaults;
@use 'typography-parsers' as parser;

$_valid-typography-queries: (
    'font-size',
    'font-weight',
    'letter-spacing',
    'text-decoration',
    'text-transform'
);

@mixin config(
    $global: (
        'family': ()
    ),
    $title: (
        'family': map.get($global, 'family')
    ),
    $subtitle: (
        'family': map.get($global, 'family')
    ),
    $body: (
        'family': map.get($global, 'family')
    )
) {

    $_merged-global: map.merge(defaults.$init-global, $global);
    $_merged-title: map.merge(defaults.$init-title, $title);
    $_merged-subtitle: map.merge(defaults.$init-subtitle, $subtitle);
    $_merged-body: map.merge(defaults.$init-body, $body);

    * {
        @include parser.font-family(map.get($_merged-global, 'family'), map.get($_merged-global, 'type'));
        color: inherit;

        &::before,
        &::after {
            @include parser.font-family(map.get($_merged-global, 'family'), map.get($_merged-global, 'type'));
            color: inherit;
        }
    }

    a {
        text-decoration: none;
        outline: none;
    }

    h1,
    h2,
    h3 {
        font-weight: map.get($_merged-title, 'weight');
        @include parser.font-family(map.get($_merged-title, 'family'), map.get($_merged-title, 'type'));
    }

    h4,
    h5,
    h6 {
        font-weight: map.get($_merged-subtitle, 'weight');
        @include parser.font-family(map.get($_merged-subtitle, 'family'), map.get($_merged-subtitle, 'type'));
    }

    p {
        font-weight: map.get($_merged-body, 'weight');
        @include parser.font-family(map.get($_merged-body, 'family'), map.get($_merged-body, 'type'));
    }

    b {
        font-weight: 700;
        color: inherit;
    }

    html {
        font-size: 100%;
    }
}

@mixin apply($typography-theme) {
    $_valid-typography-theme: Feature.validate-data-type('map', $typography-theme);

    @if $_valid-typography-theme {

        @if Feature.has-property($typography-theme, 'font-size') {
            $_font-size: parser.px-to-rem(map.get($typography-theme, 'font-size'));
            font-size: $_font-size;
        }

        @if Feature.has-property($typography-theme, 'font-weight') {
            $_font-weight: map.get($typography-theme, 'font-weight');
            font-weight: $_font-weight;
        }

        @if Feature.has-property($typography-theme, 'letter-spacing') {
            $_letter-spacing: map.get($typography-theme, 'letter-spacing');
            letter-spacing: parser.get-letter-spacing($_letter-spacing);
        }

        @if Feature.has-property($typography-theme, 'text-decoration') {
            $_text-decoration: map.get($typography-theme, 'text-decoration');
            text-decoration: $_text-decoration;
        }

        @if Feature.has-property($typography-theme, 'text-transform') {
            $_text-transform: map.get($typography-theme, 'text-transform');
            text-transform: $_text-transform;
        }

    }

}
