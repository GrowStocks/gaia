//
//  Copyright (c) 2021 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use '../../Core/Color';
@use '../../Core/Shape';
@use '../../Core/Typography';

@use '../../Core/Feature';

@use 'sass:map';
@use 'button-base';
@use 'button-theme';

@mixin render(
    $color-settings: (),
    $shape-settings: (),
    $typography-settings: (),
    $type: (
        'default'
    )
) {

    $_color-theme: map.merge(button-theme.$init-color-theme, $color-settings);
    $_shape-theme: map.merge(button-theme.$init-shape-theme, $shape-settings);
    $_typography-theme: map.merge(button-theme.$init-typography-theme, $typography-settings);

    // Base
    @include button-base.core-style() {
        @if Feature.item-exists($type, default) or Feature.item-exists($type, text) {
            &.sc-button {
                @include Color.apply('text', $_color-theme);
                @include Typography.apply($_typography-theme);
                @include Shape.apply($_shape-theme);
            }
        }

        @if Feature.item-exists($type, outlined) {
            &.sc-button--outlined {
                @include Color.apply('outlined', $_color-theme);
                @include Typography.apply($_typography-theme);
                @include Shape.apply($_shape-theme);
            }
        }

        @if Feature.item-exists($type, filled) {
            &.sc-button--filled {
                @include Color.apply('filled', $_color-theme);
                @include Typography.apply($_typography-theme);
                @include Shape.apply($_shape-theme);
            }
        }
    }
}
