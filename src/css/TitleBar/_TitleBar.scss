//
// Copyright (c) 2021 GrowStocks
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

@use '../mixins';
@use '../Typography/Typography' as typography;

@use '../Core';

// @BaseStyling
@mixin base(
    $component-name: '.title-bar',

    $base-padding: undefined,
    $base-margin-bottom: 10px,
    $base-border-radius: undefined,
    $base-border: none,

    $base-clip-size: undefined,
    $base-custom-clip: undefined,

    $base-fill: undefined,
    $base-ink: undefined,
    $base-icon-ink: undefined,
    $base-font-size: undefined,
    $base-icon-size: undefined,

    $base-shape: default,
    $base-shape-exceptions: (),
) {
    #{unquote($component-name)} {
        width: 100%;
        height: auto;

        @include fill($base-fill);
        @include ink($base-ink);

        padding: $base-padding;
        margin-bottom: $base-margin-bottom;
        border-radius: $base-border-radius;

        border: $base-border;

        font-size: typography.px-to-rem($base-font-size);

        @include Core.shape($base-shape, $base-border-radius, $base-clip-size, $base-shape-exceptions, $base-custom-clip);

        // WHEN TITLE BAR BECOMES A DIV
        .title-bar__icon {
            position: relative;
            top: 2px;
            margin-right: 5px;
            font-size: inherit;
            @include icon-ink($base-icon-ink);
        }

        h2 {
            position: relative;
            display: inline-block;
            font-size: inherit;
            color: inherit;
        }
    }
}

@mixin render(
    $padding: 8px 10px,

    $fill: var(--primary),
    $ink: var(--on-primary),
    $icon-ink: var(--on-primary),

    $font-size: 18px,
    $icon-size: 18px,

    $border: none,
    $border-radius: 0.3rem,

    $shape: default,

    $clip-size: 0.5rem,
    $custom-clip: (),

    $type: (
        default: true
    )
) {
    // .title-bar
    @if Core.check-parameters($type, default) == true {
        @include base(
            $base-padding: $padding,
            $base-margin-bottom: 10px,
            $base-border-radius: $border-radius,
            $base-border: 1px solid #{$fill},

            $base-clip-size: $clip-size,
            $base-custom-clip: $custom-clip,

            $base-fill: $fill,
            $base-ink: $ink,
            $base-icon-ink: $icon-ink,
            $base-font-size: $font-size,
            $base-icon-size: $icon-size,

            $base-shape: $shape,
        );
    }
    // &--on-card
    @if Core.check-parameters($type, on-card) == true {
        @include base(
            $component-name: '.title-bar--on-card',
            $base-padding: 3px 0,
            $base-margin-bottom: 7px,
            $base-border-radius: none,
            $base-border: none,

            $base-clip-size: none,
            $base-custom-clip: (),

            $base-fill: var(--clear),
            $base-ink: $ink,
            $base-icon-ink: $icon-ink,
            $base-font-size: $font-size,
            $base-icon-size: $icon-size,

            $base-shape: default,
        );
    }
    // &--on-surface
    @if Core.check-parameters($type, on-surface) == true {
        @include base(
            $component-name: '.title-bar--on-surface',
            $base-padding: 0 5px,
            $base-margin-bottom: 7px,
            $base-border-radius: none,
            $base-border: none,

            $base-clip-size: none,
            $base-custom-clip: (),

            $base-fill: var(--clear),
            $base-ink: $ink,
            $base-icon-ink: $icon-ink,
            $base-font-size: $font-size,
            $base-icon-size: $icon-size,

            $base-shape: default,
        );
    }
    // &--outlined
    @if Core.check-parameters($type, outlined) == true {
        @include base(
            $component-name: '.title-bar--outlined',
            $base-padding: $padding,
            $base-margin-bottom: 10px,
            $base-border-radius: $border-radius,
            $base-border: 1px solid #{$fill},

            $base-clip-size: $clip-size,
            $base-custom-clip: $custom-clip,

            $base-fill: var(--clear),
            $base-ink: $ink,
            $base-icon-ink: $icon-ink,
            $base-font-size: $font-size,
            $base-icon-size: $icon-size,

            $base-shape: $shape,
            $base-shape-exceptions: (
                    clipped: true
            )
        );
    }
}

// @API
@mixin fill($fill-value) {
    background: $fill-value;
}

@mixin ink($ink-value) {
    color: $ink-value;
}

@mixin icon-ink($icon-ink-value) {
    color: $icon-ink-value;
}
