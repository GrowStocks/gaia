//
// Copyright (c) 2021 GrowStocks
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

@use 'sass:map';
@use 'sass:list';

@use '../Core';
@use '../Typography' as typography;
@use '../Button';

@use '../mixins';

@mixin base(
    $component-name: '.sc-snackbar',
    $base-style: filled,
    $base-fill-settings: (),
    $base-ink-settings: (),
    $base-shape-settings: (),
) {

    $_component-settings: (
        child-contents: false
    );

    $_init-fill-settings: (
        default: #232323,
    );

    $_init-ink-settings: (
        default: #fff,
    );

    $_init-shape-settings: (
        shape: default,
        border-radius: 0.3rem,
        shape-exceptions: (),
    );

    // Color Settings
    $_fill-settings: map.merge($_init-fill-settings, $base-fill-settings);
    $_ink-settings: map.merge($_init-ink-settings, $base-ink-settings);

    // Shape
    $_shape-settings: map.merge($_init-shape-settings, $base-shape-settings);

    #{unquote($component-name)} {
        position: fixed;
        width: calc(100% - 40px);
        max-width: 420px;
        padding: 14px 16px;
        z-index: 1000;

        bottom: 70px;
        right: 20px;

        border-left: none;

        &.sc-error {
            border-left: 5px solid var(--sc-theme--error);
        }
        &.sc-success {
            border-left: 5px solid var(--sc-theme--success);
        }
        &.sc-warning {
            border-left: 5px solid var(--sc-theme--warning);
        }

        // Color
        @include Core.color($base-style, $_fill-settings, $_ink-settings);
        // Shape
        @include Core.shape($_shape-settings);
        // Get transitions
        @include mixins.prefix(transition, all 0.1s ease);

        @include mixins.mq-min(mixins.$full-min) {
            bottom: 30px;
            right: 30px;
            left: auto;
        }

        .sc-snackbar__wrap {
            width: 100%;
            display: flex;
            justify-content: space-between;

            .sc-snackbar__label {
                font-size: 15px;
            }

            @include Button.base(
                $component-name: '.sc-snackbar__action',
                $base-fill-settings: (),
                $base-ink-settings: (),
                $base-shape-settings: (),
            ) {
                padding: 0 !important;
            };
        }
    }
}
