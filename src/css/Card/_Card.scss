//
//  MIT License
//
//  Copyright (c) 2021 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use '../mixins';
@use '../Typography' as typography;
@use 'sass:map';
@use '../Button';

@mixin base(
    $component-name: '.card',
    $base-padding: undefined,
    $base-margin-bottom: undefined,

    $base-fill: undefined,
    $base-ink: undefined,

    $base-font-size: undefined,
    $base-font-weight: undefined,

    $base-icon-size: undefined,
    $base-icon-ink: undefined,

    $base-shape: default,
    $base-shape-exceptions: (),

    $base-border: none,
    $base-border-radius: undefined,
    $base-clip-size: undefined,
    $base-custom-clip: (),

    $base-scaling: (),

    $base-type: (
        default: true
    )
) {
    @if check($base-type, default) == true {
        #{unquote($component-name)} {
            width: 100%;
            height: auto;
            padding: $base-padding;
            border-radius: $base-border-radius;
            margin-bottom: $base-margin-bottom;

            @include mixins.shape($base-shape, $base-border-radius, $base-clip-size, $base-shape-exceptions, $base-custom-clip);

            p {
                @include typography.generate(body-14);
                text-align: justify;
            }

            .card__big-text {
                font-size: typography.px-to-rem(24px);
            }

            .card__small-text {
                font-size: typography.px-to-rem(12px);
            }

            &.stable {
                background-color: var(--success) !important;
            }

            &.semi-stable {
                background-color: var(--warning) !important;
                color: var(--on-warning) !important;
            }

            &.unstable {
                background-color: var(--error) !important;
            }

            &.undefined {
                background-color: var(--undefined) !important;
            }
        }
    }

    @if check($base-type, x-oriented) == true {
        #{unquote($component-name)}--x {

            @include mixins.shape($base-shape, $base-border-radius, $base-clip-size, $base-shape-exceptions, $base-custom-clip);

            height: 110px;
            width: 100%;
            overflow: hidden;

            display: grid;
            grid-template-columns: 110px auto;

            @include typography.generate(body-12);
            @include mixins.prefix(transition, all 0.1s ease);

            &:hover,
            &:focus,
            &:focus-within {
                transform: scale($base-scaling);
            }

            .card--x__img {
                width: 110px;
                height: 110px;
                //border-radius: 5px 0 0 5px;

                overflow: hidden;

                img {
                    width: 110px;
                    height: 110px;
                    object-fit: cover;
                }
            }

            .card--x__container {
                width: 100%;
                padding: 10px;
                overflow: hidden !important;
                word-break: break-word;
                //border-radius: 0 5px 5px 0;

                @include fill($base-fill);
                @include ink($base-ink);

                @include mixins.rainbow-factory();

                @media (min-width: 850px) {
                    padding: 10px;
                }

                .wrap--text {
                    margin-bottom: 7px;

                    .card--x__text {
                        position: relative;
                        color: inherit;
                        display: -webkit-box;
                        -webkit-line-clamp: 2;
                        -webkit-box-orient: vertical;
                        text-overflow: ellipsis;
                        overflow: hidden;
                        word-break: break-all;

                        &::before,
                        &::after {
                            content: '"';
                        }
                    }
                }

                h2 {
                    font-size: typography.px-to-rem(18px);
                    color: inherit;
                }

                .card--x__icons--wrap {
                    display: block;
                    width: 100%;
                    max-width: 200px;
                    margin-top: 7px;

                    a {
                        margin: 0 7px 0 0;
                        font-size: 24px;
                        color: $base-icon-ink;

                        @include mixins.prefix(transition, all 0.1s linear);

                        &:hover {
                            opacity: 0.5;
                        }
                    }
                }

                .card--x__action {
                    //
                }
            }
        }
    }

    @if check($base-type, y-oriented) == true {
        #{unquote($component-name)}--y {

            @include mixins.shape($base-shape, $base-border-radius, $base-clip-size, $base-shape-exceptions, $base-custom-clip);

            display: flex;
            flex-direction: column;
            overflow: hidden;
            width: 100%;
            margin: 0;

            @include fill($base-fill);

            @include mixins.prefix(transition, all 0.1s ease!important);

            &:hover,
            &:focus,
            &:focus-within {
                transform: scale($base-scaling);
            }

            .card--y__img {
                //border-radius: 5px 5px 0 0;
                width: 100%;
                height: 120px !important;
                overflow-y: hidden;

                img {
                    //border-radius: 5px 5px 0 0;
                    width: 100%;
                    height: auto !important;
                }
            }

            .card--y__info {
                padding: $base-padding;
                color: $base-ink;

                .card--y__info__title {
                    font-size: typography.px-to-rem(20px);
                    white-space: nowrap;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    color: inherit;
                }

                .card--y__info__subtitle {
                    font-size: typography.px-to-rem(14px);
                    white-space: nowrap;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    color: inherit;
                }

                @include Button.base(
                    $component-name: '.card--y__action',
                    $base-font-size: 14px,
                    $base-icon-size: 18px,
                    $base-ink: var(--secondary),
                    $base-icon-ink: var(--secondary),
                    $base-padding: 8px 0 0 0,
                    $base-shape: block,
                    $base-fill: var(--clear),
                    $base-font-weight: 700
                );

            }

            .card--y__footer {
                //
            }
        }
    }
}

@mixin render(
    $padding: 10px 10px 7px 10px,
    $margin-bottom: 0,
    $border-radius: 0.3rem,

    $fill: var(--primary-light),
    $ink: var(--on-primary),
    $icon-ink: var(--on-primary),

    $font-size: 14px,
    $scaling: 1.03,

    $shape: default,
    $shape-exceptions: (),
    $clip-size: 0.7em,
    $custom-clip: (),

    $type: (
        default: true
    )
) {
    @if check($type, default) == true {
        @include base(
            $component-name: '.card',
            $base-padding: $padding,
            $base-margin-bottom: $margin-bottom,
            $base-fill: $fill,
            $base-ink: $ink,
            $base-font-size: $font-size,
            $base-font-weight: (),
            $base-icon-size: 18px,
            $base-icon-ink: $icon-ink,
            $base-shape: $shape,
            $base-shape-exceptions: (
                pill: true
            ),
            $base-border: (),
            $base-border-radius: $border-radius,
            $base-clip-size: $clip-size,
            $base-custom-clip: $custom-clip,
            $base-scaling: $scaling,
            $base-type: (
                default: true
            )
        );
    }

    @if check($type, x) == true {
        @include base(
            $component-name: '.card',
            $base-padding: $padding,
            $base-margin-bottom: $margin-bottom,
            $base-fill: $fill,
            $base-ink: $ink,
            $base-font-size: $font-size,
            $base-font-weight: (),
            $base-icon-size: 18px,
            $base-icon-ink: $icon-ink,
            $base-shape: $shape,
            $base-shape-exceptions: (
                pill: true
            ),
            $base-border: (),
            $base-border-radius: $border-radius,
            $base-clip-size: $clip-size,
            $base-custom-clip: $custom-clip,
            $base-scaling: $scaling,
            $base-type: (
                x-oriented: true
            )
        );
    }
    @if check($type, y) == true {
        @include base(
            $component-name: '.card',
            $base-padding: $padding,
            $base-margin-bottom: $margin-bottom,
            $base-fill: $fill,
            $base-ink: $ink,
            $base-font-size: $font-size,
            $base-font-weight: (),
            $base-icon-size: 18px,
            $base-icon-ink: $icon-ink,
            $base-shape: $shape,
            $base-shape-exceptions: (
                pill: true
            ),
            $base-border: (),
            $base-border-radius: $border-radius,
            $base-clip-size: $clip-size,
            $base-custom-clip: $custom-clip,
            $base-scaling: $scaling,
            $base-type: (
                y-oriented: true
            )
        );
    }
}

@function check($map, $to-check) {
    $query: map.get($map, $to-check);

    @return $query;
}


// @API (Depricated)
@mixin fill($fill-value) {
    background: $fill-value;
}

@mixin ink($ink-value) {
    color: $ink-value;
}

@mixin icon-ink($icon-ink-value) {
    color: $icon-ink-value;
}

@mixin border($border-style, $border-radius) {
    border: $border-style;
    border-radius: $border-radius;
}

@mixin shape($clip-path) {
    clip-path: $clip-path;
}
