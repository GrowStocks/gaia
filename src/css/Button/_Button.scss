//
// Copyright (c) 2021 GrowStocks
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

@use 'sass:map';

@use '../mixins';
@use '../Typography' as typography;
@use '../Tooltip';

@use '../Core';

// Button component template (can be used anywhere)
@mixin base(
    $component-name: 'button',
    $base-padding: undefined,

    $base-fill: undefined,
    $base-ink: undefined,

    $base-font-size: undefined,
    $base-font-weight: undefined,

    $base-icon-size: undefined,
    $base-icon-ink: undefined,

    $base-shape: default,
    $base-shape-exceptions: (),

    $base-border: none,
    $base-border-radius: undefined,
    $base-clip-size: undefined,
    $base-custom-clip: (),

    $base-width: max-content
) {
    #{unquote($component-name)} {
        width: $base-width;
        display: inline-grid;
        place-items: center;
        grid-template-columns: max-content 1fr;

        font-weight: $base-font-weight;
        font-size: typography.px-to-rem($base-font-size);

        padding: $base-padding;
        border: $base-border;
        background: $base-fill;
        color: $base-ink;

        > * + * {
            margin-left: 4px;
        }

        .button__label {
            color: inherit;
            font-weight: inherit;
            font-size: inherit;
            text-align: left;
        }

        .button__icon {
            font-size: typography.px-to-rem($base-icon-size);
            color: $base-icon-ink;
            position: relative;
        }

        @include mixins.prefix(transition, all 0.1s linear);

        @include Core.shape($base-shape, $base-border-radius, $base-clip-size, $base-shape-exceptions, $base-custom-clip);

        &:hover {
            filter: brightness(80%);
            cursor: pointer;
        }

        &[data-tooltip] {
            @include Tooltip.base(
                $base-fill: #232323,
                $base-ink: #fff,
                $base-padding:  0.5rem 0.7rem,
                $base-border-radius: 0.3rem,
                $base-font-size: 0.75rem,
                $base-bottom-position: calc(100% + 5px),
                $base-settings: (
                    mobile-visible: true
                )
            );
        }
    }
}

// Button.render($parameters)
@mixin render(
    $font-size: 14px,
    $font-weight: 700,

    $shape: default,
    $border-radius: 0.3rem,
    $padding: 8px 12px,
    $clip-size: 0.5rem,
    $custom-clip: (),

    $fill: var(--secondary),
    $border-fill: $fill,
    $ink: $fill,

    $icon-size: 18px,
    $icon-ink: $ink,

    $type: ()
) {

    @if Core.check-parameters($type, text) == true {
        // .button
        @include base(
            $component-name: '.button',
            $base-padding: $padding,
            $base-border-radius: $border-radius,
            $base-fill: var(--clear),
            $base-ink: $ink,
            $base-font-size: $font-size,
            $base-font-weight: $font-weight,
            $base-icon-size: $icon-size,
            $base-icon-ink: $icon-ink,
            $base-shape: $shape,
            $base-shape-exceptions: (),
            $base-custom-clip: $custom-clip
        );
    }

    @if Core.check-parameters($type, outlined) == true {
        // .button--outlined
        @include base(
            $component-name: '.button--outlined',
            $base-padding: $padding,
            $base-border-radius: $border-radius,
            $base-border: 1px solid #{$border-fill},
            $base-fill: var(--clear),
            $base-ink: $ink,
            $base-font-size: $font-size,
            $base-font-weight: $font-weight,
            $base-icon-size: $icon-size,
            $base-icon-ink: $icon-ink,
            $base-shape: $shape,
            $base-shape-exceptions: (
                    clipped: true
            ),
            $base-custom-clip: $custom-clip
        );
    }

    @if Core.check-parameters($type, filled) == true {
        @include base(
            $component-name: '.button--filled',
            $base-padding: $padding,
            $base-border-radius: $border-radius,
            $base-border: 1px solid #{$fill},
            $base-fill: $fill,
            $base-ink: var(--on-secondary),
            $base-icon-ink: var(--on-secondary),
            $base-font-size: $font-size,
            $base-font-weight: $font-weight,
            $base-icon-size: $icon-size,
            $base-shape: $shape,
            $base-shape-exceptions: (),
            $base-clip-size: $clip-size,
            $base-custom-clip: $custom-clip,
        );
    }
}
