//
// Copyright (c) 2021 GrowStocks
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

@use '../mixins';
@use '../Typography' as typography;
@use '../Button';

@use '../Core';

@mixin render(
    $fill: var(--primary--variant-light),
    $ink: var(--surface),
    $scaling: 1.03,
    $shape: rounded,
    $border-radius: 1rem,
    $clip-size: 0.7rem,
    $shape-exceptions: (
        pill: true
    )
) {
    $custom-clip:
        polygon(
            0% $clip-size,
            $clip-size 0%,
            calc(100% - #{$clip-size}) 0%,
            100% 0%,
            100% calc(100% - #{$clip-size}),
            calc(100% - #{$clip-size}) 100%,
            $clip-size 100%,
            0% calc(100% - #{$clip-size})
        );

    $composed-border-radius: #{$border-radius} 0 0 0;

    .drawer__overlay {
        display: block;
        position: fixed;
        z-index: 98;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        background-color: rgb(0, 0, 0);
        background-color: rgba(0, 0, 0, 0.4);
    }

    .drawer {
        width: 100%;
        max-width: 370px;
        padding: 15px;
        height: calc(100% - 50px);
        position: fixed;
        right: 0!important;
        top: 50px;
        z-index: 99;
        overflow-y: auto;

        color: $ink;

        background: $fill;

        @include Core.shape($shape, $composed-border-radius, $clip-size, $shape-exceptions, $custom-clip);

        * {
            color: inherit;
        }

        @include Button.base(
            $component-name: '.drawer__item',
            $base-font-size: 16px,
            $base-icon-size: 17px,
            $base-ink: var(--surface),
            $base-icon-ink: var(--surface),
            $base-padding: 8px 0 0 0,
            $base-shape: block,
            $base-fill: var(--clear),
            $base-font-weight: 400,
            $base-display: grid,
        );

        .drawer__icon {
            display: inline-block;
            position: relative;
            top: 2px;
            font-size: typography.px-to-rem(17px);
        }

        @include mixins.scrollbar($fill);
    }

    .drawer__divider {
        margin: 17px 0 7px 0;
        text-align: center;
        font-weight: 700!important;
    }

    .drawer__socials {
        display: flex;
        justify-content: space-around;
        width: 210px;
        margin: 0 auto;

        i {
            font-size: typography.px-to-rem(24px) !important;

            @include mixins.prefix(transition, all 0.1s ease);

            &:hover {
                opacity: 0.7;
                cursor: pointer;
                transform: scale($scaling);
            }
        }
    }

    .drawer__language-wrap {
        text-align: center;

        @include Button.base(
            $component-name: '.drawer__language',
            $base-font-size: 14px,
            $base-icon-size: 1px,
            $base-ink: var(--surface),
            $base-icon-ink: var(--surface),
            $base-padding: 0,
            $base-shape: default,
            $base-fill: var(--clear),
            $base-font-weight: 400,
            $base-display: inline-block
        );

        @include Button.base(
            $component-name: '.drawer__language--active',
            $base-font-size: 16px,
            $base-icon-size: 17px,
            $base-ink: var(--surface),
            $base-icon-ink: var(--surface),
            $base-padding: 8px 0 0 0,
            $base-shape: block,
            $base-fill: var(--clear),
            $base-font-weight: 700,
            $base-display: inline-block,
        );

        .drawer__language__spacer {
            display: inline-block;
            margin: 0 1px;
        }
    }

    .drawer__language--active {
        p {
            font-weight: 700;
        }
    }
}
