///
//  Copyright (c) 2022 GrowStocks
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
///

@use '../scaffold';
@use 'sass:map';

@mixin base($struct, $orientation) {
    $width: map.get($struct, 'width');
    $height: map.get($struct, 'height');
    $margin: map.get($struct, 'margin');
    $padding: map.get($struct, 'padding');
    $gap: map.get($struct, 'gap');

    .gs-card {
        width: scaffold.key-create('card-width', scaffold.token-switch($width));
        height: scaffold.key-create('card-height', scaffold.token-switch($height));
        margin: scaffold.key-create('card-margin', scaffold.token-switch($margin));
        display: flex;
        flex-wrap: nowrap;
        flex-direction: column;
        overflow: hidden;
        border: none !important;
        box-sizing: border-box;

        @content;

        &.gs-card--horizontal {
            flex-direction: row;

            .gs-card__media {
                height: 100%;
            }

            .gs-card__actions {
                flex-direction: column;

                & > * + * {
                    margin-top: scaffold.key-create('card-gap', scaffold.token-switch($gap));
                    margin-left: 0 !important;
                }
            }
        }

        &.gs-card--vertical {
            flex-direction: column;

            .gs-card__media {
                height: scaffold.to-rem(140px);
            }

            .gs-card__actions {
                flex-direction: row;

                & > * + * {
                    margin-left: scaffold.key-create('card-gap', scaffold.token-switch($gap));
                }
            }
        }

        .gs-card__media {
            width: 100%;
            height: scaffold.to-rem(140px);
            overflow-y: hidden;
            user-select: none;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                object-position: center;
            }
        }

        .gs-card__contents {
            padding: scaffold.key-create('card-padding', scaffold.token-switch($padding));

            & > * + * {
                margin-top: 0.7rem;
            }

            .gs-card__header {

                .gs-card__title {
                    font-size: scaffold.key-create('card-title-size', scaffold.token-get('size-title'));
                    line-height: scaffold.key-create('card-title-line-height', scaffold.token-get('line-height-title'));
                }

                .gs-card__description {
                    display: -webkit-box;
                    font-size: inherit;
                    line-height: inherit;
                    overflow: hidden;
                    -webkit-box-orient: vertical;
                    -webkit-line-clamp: 2;
                }

                .gs-card__category {
                    margin-bottom: 0.3rem;
                    color: scaffold.key-create('card-category-ink', scaffold.token-get('secondary'));
                    font-size: scaffold.key-create('card-category-size', scaffold.token-get('size-body'));
                    line-height: scaffold.key-create('card-category-line-height', scaffold.token-get('line-height-body'));
                }
            }

            .gs-card__actions {
                display: flex;
                flex-wrap: nowrap;

                &.items-left {
                    justify-content: flex-start;
                }

                &.items-center {
                    justify-content: center;
                }

                &.items-right {
                    justify-content: flex-end;
                }

                > * {
                    max-width: 100%;
                    flex-basis: 100%;
                }

                & > * + * {
                    margin-left: scaffold.key-create('card-gap', scaffold.token-switch($gap));
                }

                a {
                    display: inline-block;

                    .gs-button {
                        max-width: 100%;
                    }
                }
            }
        }
    }
}