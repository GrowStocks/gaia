//
// Copyright (c) 2021 GrowStocks
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

@use '../color-validators' as v;
@use '../../node_modules/sass-true' as Test;

@include Test.test-module('IsScope [function]') {
    @include Test.it('Checks if the query is a valid scope query');
    /// Should output: true / nothing
    @include Test.assert-equal(v.is-scope_('filled'), true);
    /// Should output: false / error
    @include Test.assert-equal(v.is-scope_('link'), false);
    
    $terminal-output: false;
    @include Test.report;
}

@include Test.test-module('IsColorType [function]') {
    @include Test.it('Checks if the query is a valid color type query');
    /// Should output: true / nothing
    @include Test.assert-equal(v.is-color-type_('default'), true);
    /// Should output: false / error
    @include Test.assert-equal(v.is-color-type_('some-color-type'), false);
    
    $terminal-output: false;
    @include Test.report;
}

@include Test.test-module('IsMap [function]') {
    @include Test.it('Checks if the query is a valid map query');
    /// Should output: true / nothing
    @include Test.assert-equal(v.is-map_(('map': map)), true);
    /// Should output: false / error
    @include Test.assert-equal(v.is-map_(('this is a list :>', 'what are you expecting? a map? pfft!')), false);
    
    $terminal-output: false;
    @include Test.report;
}
