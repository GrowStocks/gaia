//--------------------------------------------------------------------------
// Mixins
//--------------------------------------------------------------------------
//
// Stack global mixins
//

@use 'sass:map';
@use 'sass:math';

$mobile-min: var(--mobile-min);
$medium-min: var(--medium-min);
$full-min: var(--full-min);

$mobile-max: var(--mobile-max);
$medium-max: var(--medium-max);
$full-max: var(--full-max);

// MIN MEDIA
@mixin mobile-min() {
    @media(min-width: $mobile-min) {
        @content
    }
}

@mixin medium-min() {
    @media(min-width: $medium-min) {
        @content
    }
}

// MAX MEDIA
@mixin full-min() {
    @media(min-width: $full-min) {
        @content
    }
}

@mixin mobile-max() {
    @media(max-width: $mobile-max) {
        @content
    }
}

@mixin medium-max() {
    @media(max-width: $medium-max) {
        @content
    }
}

@mixin full-max() {
    @media(max-width: $full-max) {
        @content
    }
}

// VENDOR PREFIX
@mixin prefix($property, $value) {

    $prefixes-map: (
        'webkit',
        'ms',
        'moz',
        'o'
    );

    @each $prefix in $prefixes-map {
        #{'-' + $prefix + '-' + $property}: $value;
    }

    #{$property}: $value;
}

// SCROLLBAR
@mixin scrollbar($background) {

    &::-webkit-scrollbar-track {
        background: $background;
    }

    &::-webkit-scrollbar-thumb {
        background-color: var(--scroll-thumb);
        border: 4px solid $background;

        &:hover {
            background-color: var(--scroll-hover);
        }
    }

}

// RAINBOW MIXIN
@mixin rainbow-factory() {

    $palette: (
        //$color: $base
        'dark-red': #7f0000,
        'red': #b00020,
        'orange': #e65100,
        'light-orange': #ff8f00,
        'yellow': #fbc02d,
        'lime-green': #7cb342,
        'green': #25a53f,
        'dark-green': #005005,
        'light-blue': #039be5,
        'blue': #01579b,
        'dark-blue': #002f6c,
        'pink': #f48fb1,
        'magenta': #d500f9,
        'purple': #4a148c
    );

    $text-palette: (
        //$color: $text
        'dark-red': #fff,
        'red': #fff,
        'orange': #fff,
        'light-orange': #000,
        'yellow': #000,
        'lime-green': #000,
        'green': #fff,
        'dark-green': #fff,
        'light-blue': #000,
        'blue': #fff,
        'dark-blue': #fff,
        'pink': #000,
        'magenta': #fff,
        'purple': #fff
    );

    @each $color, $base in $palette {
        &.#{$color} {
            background-color: $base!important;
            color: map.get($text-palette, $color)!important;
        }
    }

}
