//---------------------------------------------------
//  Copyright (c) 2024 MatteuSan
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//---------------------------------------------------

@use '../ms-core';
@use 'sass:list';
@use 'select-field-base' as base;
@use 'select-field-theme' as theme;

@mixin render(
  $color: (),
  $struct: (),
  $typography: (),
  $settings: ()
) {
  $color: ms-core.theme-merge(theme.$init-color, $color);
  $struct: ms-core.theme-merge(theme.$init-struct, $struct);
  $typography: ms-core.theme-merge(theme.$init-typography, $typography);
  $settings: ms-core.theme-merge(theme.$init-settings, $settings);

  $resolve-padding: if(list.length(ms-core.theme-get($struct, 'padding')) >= 2, list.nth(ms-core.theme-get($struct, 'padding'), 2), list.nth(ms-core.theme-get($struct, 'padding'), 1));

  @include base.init(
    ms-core.primitive-token-switch('padding.#{$resolve-padding}', $resolve-padding),
    ms-core.primitive-token-switch('padding.#{$resolve-padding}', $resolve-padding),
    ms-core.primitive-token-switch('padding.#{list.nth(ms-core.theme-get($struct, 'padding'), 1)}', list.nth(ms-core.theme-get($struct, 'padding'), 1)),
  ) {
    @include ms-core.color-bind('select-field-label', (
      ink: ms-core.theme-get($color, 'ink', 'disabled'),
    ));
    @include ms-core.typography-bind('select-field-label', (
      family: ms-core.theme-get($typography, 'family'),
      size: ms-core.theme-get($typography, 'size', 'label'),
      weight: ms-core.theme-get($typography, 'weight'),
      line-height: ms-core.theme-get($typography, 'height'),
    ));

    @include ms-core.struct-bind('select-field', (
      width: ms-core.theme-get($struct, 'width'),
      padding: ms-core.theme-get($struct, 'padding'),
      radius: ms-core.theme-get($struct, 'radius'),
      border-width: ms-core.theme-get($struct, 'border-width'),
      border-style: ms-core.theme-get($struct, 'border-style'),
      gap: ms-core.theme-get($struct, 'gap'),
    ));
    @include ms-core.typography-bind('select-field', (
      family: ms-core.theme-get($typography, 'family'),
      size: ms-core.theme-get($typography, 'size', 'default'),
      weight: ms-core.theme-get($typography, 'weight'),
      line-height: ms-core.theme-get($typography, 'height'),
    ));

    @include ms-core.color-bind('select-field-helper', (
      ink: ms-core.theme-get($color, 'ink', 'helper'),
    ));
    @include ms-core.typography-bind('select-field-helper', (
      family: ms-core.theme-get($typography, 'family'),
      size: ms-core.theme-get($typography, 'size', 'helper'),
      weight: ms-core.theme-get($typography, 'weight'),
      line-height: ms-core.theme-get($typography, 'height'),
    ));

    &:has(.ms-select-field__input:not(:read-only):not(:disabled)) {
      .ms-select-field__label {
        @include ms-core.color-bind('select-field-label', (
          ink: ms-core.theme-get($color, 'ink'),
        ));
      }
    }

    &:has(.ms-select-field__input:read-only:disabled) {
      @include ms-core.color-ink('select-field-helper', ms-core.theme-get($color, 'ink', 'disabled'), 'bind');
    }

    .ms-select-field__input {
      &:not(:disabled),
      &:not(:read-only) {
        @include ms-core.color-bind('select-field', (
          fill: ms-core.theme-get($color, 'fill'),
          ink: ms-core.theme-get($color, 'ink'),
          border: ms-core.theme-get($color, 'fill'),
        ));

        &:focus {
          @include ms-core.color-bind('select-field', (
            fill: ms-core.theme-get($color, 'fill', 'hover'),
            border: ms-core.theme-get($color, 'border', 'focus'),
          ));
          @include ms-core.struct-bind('select-field', (
            border-width: ms-core.theme-get($struct, 'border-width', 'focus'),
          ));
        }
      }

      &:disabled {
        @include ms-core.color-bind('select-field', (
          fill: ms-core.theme-get($color, 'fill', 'disabled'),
          ink: ms-core.theme-get($color, 'ink', 'disabled'),
          border: ms-core.theme-get($color, 'fill', 'disabled'),
        ));
        cursor: not-allowed;
      }
    }

    .ms-select-field__helper {
      padding: 0.3rem ms-core.primitive-token-switch('padding.#{$resolve-padding}', $resolve-padding) 0;
    }

    &:where(.is-outlined) {
      .ms-select-field__input {
        &:not(:disabled),
        &:not(:read-only) {
          @include ms-core.color-bind('select-field', (
            fill: transparent,
            ink: ms-core.theme-get($color, 'ink'),
            border: ms-core.theme-get($color, 'fill'),
          ));

          &:focus {
            @include ms-core.color-bind('select-field', (
              border: ms-core.theme-get($color, 'border', 'focus'),
            ));
            @include ms-core.struct-bind('select-field', (
              border-width: ms-core.theme-get($struct, 'border-width', 'focus'),
            ));
          }
        }

        &:disabled {
          @include ms-core.color-bind('select-field', (
            fill: transparent,
            ink: ms-core.theme-get($color, 'ink', 'disabled'),
            border: ms-core.theme-get($color, 'fill', 'disabled'),
          ));
        }
      }

      &:where(.is-error) {
        .ms-select-field__input:not(:disabled),
        .ms-select-field__input:not(:read-only) {
          @include ms-core.color-bind('select-field', (
            fill: rgba(0 0 0 / 0) !important,
            border: 'error-alpha-400',
          ));
        }
      }
    }

    &:where(.is-error) {
      .ms-select-field__input:not(:disabled),
      .ms-select-field__input:not(:read-only) {
        @include ms-core.color-bind('select-field', (
          fill: 'error-alpha-300',
          ink: 'error-400',
          border: 'error-alpha-400'
        ));

        &:focus {
          @include ms-core.color-bind('select-field', (
            fill: 'error-alpha-300',
            border: 'error-400'
          ));
        }

        + .ms-select-field__helper {
          @include ms-core.color-bind('select-field-helper', (
            ink: 'error-400',
          ));
        }
      }

      .ms-select-field__helper {
        @include ms-core.color-bind('select-field-helper', (
          ink: ms-core.theme-get($color, 'ink', 'helper'),
        ));
      }
    }

    &:where(.is-raised) {
      @include ms-core.struct-bind('select-field', (
        shadow: 'xs',
      ));
    }
  }
}